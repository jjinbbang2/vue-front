name: Automated Code Review

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Install dependencies
      run: npm install

    - name: Run ESLint
      run: npm run lint || echo "ESLint not configured"
      continue-on-error: true

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test || echo "Tests not configured"
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Check code quality
      run: |
        echo "=== Code Quality Report ===" >> $GITHUB_STEP_SUMMARY
        echo "| 항목 | 상태 |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|" >> $GITHUB_STEP_SUMMARY
        
        # 파일 구조 검사
        if [ -f "src/App.vue" ]; then
          echo "| Vue 앱 구조 | ✅ 정상 |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Vue 앱 구조 | ❌ App.vue 누락 |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # 컴포넌트 검사
        COMPONENTS=$(find src/components -name "*.vue" 2>/dev/null | wc -l)
        echo "| 컴포넌트 수 | $COMPONENTS 개 |" >> $GITHUB_STEP_SUMMARY
        
        # 라우터 검사
        if [ -f "src/router/index.js" ]; then
          echo "| 라우터 설정 | ✅ 정상 |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| 라우터 설정 | ❌ 라우터 누락 |" >> $GITHUB_STEP_SUMMARY
        fi
        
        # 패키지 의존성 검사
        echo "| 의존성 패키지 | $(jq '.dependencies | length' package.json) 개 |" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 개선 제안" >> $GITHUB_STEP_SUMMARY
        echo "- 모든 컴포넌트에서 scoped 스타일 사용 확인" >> $GITHUB_STEP_SUMMARY
        echo "- 반응형 디자인 적용 상태 검토" >> $GITHUB_STEP_SUMMARY
        echo "- 접근성(a11y) 가이드라인 준수 검토" >> $GITHUB_STEP_SUMMARY

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for preview
      run: npm run build

    - name: Deploy preview comment
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `
          ## 🚀 배포 미리보기 준비 완료
          
          빌드가 성공적으로 완료되었습니다!
          
          ### 📊 빌드 정보
          - Node.js 버전: 20
          - 빌드 도구: Vite
          - 커밋: ${context.sha.substring(0, 7)}
          
          ### 🔍 다음 단계
          1. 로컬에서 \`npm run preview\` 실행하여 확인
          2. 반응형 디자인 테스트
          3. 브라우저 호환성 확인
          
          *이 댓글은 자동으로 생성되었습니다.*
            `
          })
